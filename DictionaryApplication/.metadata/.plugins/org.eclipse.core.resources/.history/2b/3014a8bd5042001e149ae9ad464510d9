package application;
import org.json.JSONObject;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

public class DictionaryClient {
    private static String serverAddress;
    private static int serverPort;

    public static void main(String[] args) {
        if (args.length >= 2) {
            serverAddress = args[0];
            serverPort = Integer.parseInt(args[1]);
        }

        Frame frame = new Frame("Dictionary Client");
        Panel panel = new Panel();
        panel.setLayout(new GridLayout(10, 1));

        TextField wordField = new TextField();
        wordField.setText("Enter Word");

        TextField meaningField = new TextField();
        meaningField.setText("Enter Meaning");

        Button searchButton = new Button("Search");
        Button addButton = new Button("Add");
        Button removeButton = new Button("Remove");
        Button updateButton = new Button("Update");

        TextArea resultArea = new TextArea();
        resultArea.setEditable(false);

        // Event handlers for the buttons
        searchButton.addActionListener((ActionEvent event) -> {
            if (!wordField.getText().isEmpty()) {
                JSONObject request = new JSONObject();
                request.put("action", "search");
                request.put("word", wordField.getText());

                JSONObject response = sendRequestToServer(request);
                if (response != null && response.getString("status").equals("success")) {
                    resultArea.append("Found word: " + wordField.getText() + " Meaning: " + response.getString("meaning") + "\n");
                } else {
                    resultArea.append("Error: " + response.getString("description") + "\n");
                }
            } else {
                resultArea.append("Please enter a word to search.\n");
            }
        });

        addButton.addActionListener((ActionEvent event) -> {
            if (!wordField.getText().isEmpty() && !meaningField.getText().isEmpty()) {
                JSONObject request = new JSONObject();
                request.put("action", "add");
                request.put("word", wordField.getText());
                request.put("meaning", meaningField.getText());

                JSONObject response = sendRequestToServer(request);
                if (response != null && response.getString("status").equals("success")) {
                    resultArea.append("Added word: " + wordField.getText() + "\n");
                } else {
                    resultArea.append("Error: " + response.getString("description") + "\n");
                }
            } else {
                resultArea.append("Please enter both word and meaning to add.\n");
            }
        });

        removeButton.addActionListener((ActionEvent event) -> {
            if (!wordField.getText().isEmpty()) {
                JSONObject request = new JSONObject();
                request.put("action", "remove");
                request.put("word", wordField.getText());

                JSONObject response = sendRequestToServer(request);
                if (response != null && response.getString("status").equals("success")) {
                    resultArea.append("Removed word: " + wordField.getText() + "\n");
                } else {
                    resultArea.append("Error: " + response.getString("description") + "\n");
                }
            } else {
                resultArea.append("Please enter a word to remove.\n");
            }
        });

        updateButton.addActionListener((ActionEvent event) -> {
            if (!wordField.getText().isEmpty() && !meaningField.getText().isEmpty()) {
                JSONObject request = new JSONObject();
                request.put("action", "update");
                request.put("word", wordField.getText());
                request.put("meaning", meaningField.getText());

                JSONObject response = sendRequestToServer(request);
                if (response != null && response.getString("status").equals("success")) {
                    resultArea.append("Updated word: " + wordField.getText() + "\n");
                } else {
                    resultArea.append("Error: " + response.getString("description") + "\n");
                }
            } else {
                resultArea.append("Please enter both word and meaning to update.\n");
            }
        });

        // Add components to panel
        panel.add(wordField);
        panel.add(meaningField);
        panel.add(searchButton);
        panel.add(addButton);
        panel.add(removeButton);
        panel.add(updateButton);
        panel.add(resultArea);

        frame.add(panel);
        frame.setSize(400, 400);
        frame.setVisible(true);

        frame.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                System.exit(0);
            }
        });
    }

    private static JSONObject sendRequestToServer(JSONObject request) {
        try (Socket socket = new Socket(serverAddress, serverPort);
             PrintWriter out = new PrintWriter(socket.getOutputStream(), true);
             BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()))) {

            out.println(request.toString());

            String responseStr = in.readLine();
            return new JSONObject(responseStr);
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }
}
